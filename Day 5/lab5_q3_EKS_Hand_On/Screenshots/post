Project : Amazon EKS Hands on project on 

EKS: Elastic Kubernetes Service



Requirements:

Deploy a webserver (Nginx) on a pod in a kubernetes cluster on AWS Cloud.

The cluster must be private. both control plan and worker nodes are private.

One worker node is sufficient for now.



How it was done`:

- Make a new VPC for the project with private and public subnets.

- Make a public EC2 instance in one of the public subnets which will work as a Jump Host

- Make a Nat Gateway in one of the public subnets which will provide access to the internet to the cluster worker nodes to be able to pull images.

- Make an application load balancer that is internet facing and will be the entry point for end users.

- Make a target group and make the load balancer listen to it at port 80(HTTP).

- Make the EKS cluster ( with its cluster and worker_node IAM roles ).

- Make the node group with a node or more in it.

- SSH to the jump host, and access the cluster (after installing & configuring aws and kubectl").

- Write the deployment.yaml, service.yml files the apply it to the cluster.

- in service.yml we make a NodePort service and assign some node port (32569).

- Add node(s) to the load balancer target group specifing the port 32569 as its listen port.



Congrates you can access the web server using the Dns name of the load balancer.
